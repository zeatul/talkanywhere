<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.taw.scene.mapper.MessageMapper">

	<sql id="columns">
		id as "id" ,
		receiver_id as "receiverId" ,
		receiver_nickname as "receiverNickname" ,
		scene_id as "sceneId" ,
		name as "name" ,
		content as "content" ,
		sender_id as "senderId" ,
		sender_nickname as "senderNickname" ,
		send_time as "sendTime" 
	</sql>
	
	<sql id="where">
		<trim prefix="WHERE" prefixOverrides="AND">		 
			<if test="id != null"> AND id = #{id}  </if>
			<if test="receiverId != null"> AND receiver_id = #{receiverId}  </if>
			<if test="receiverNickname != null"> AND receiver_nickname = #{receiverNickname}  </if>
			<if test="sceneId != null"> AND scene_id = #{sceneId}  </if>
			<if test="name != null"> AND name = #{name}  </if>
			<if test="content != null"> AND content = #{content}  </if>
			<if test="senderId != null"> AND sender_id = #{senderId}  </if>
			<if test="senderNickname != null"> AND sender_nickname = #{senderNickname}  </if>
			<if test="sendTime != null"> AND send_time = #{sendTime}  </if>
		</trim>	
	</sql>
	
	<sql id="where_old">
		<trim prefix="WHERE" prefixOverrides="AND">
			AND id = #{old_id}
			AND receiver_id = #{old_receiverId}
			AND receiver_nickname = #{old_receiverNickname}
			AND scene_id = #{old_sceneId}
			AND name = #{old_name}
			AND content = #{old_content}
			AND sender_id = #{old_senderId}
			AND sender_nickname = #{old_senderNickname}
			AND send_time = #{old_sendTime}
		</trim>
	</sql>
	
	<sql id="update">
		<set>
			receiver_id = #{receiverId},
			receiver_nickname = #{receiverNickname},
			scene_id = #{sceneId},
			name = #{name},
			content = #{content},
			sender_id = #{senderId},
			sender_nickname = #{senderNickname},
			send_time = #{sendTime},
		</set>
	</sql>
	
	<sql id="updateWithoutNull">
		<set>
				<if test="receiverId != null">receiver_id = #{receiverId},</if>
				<if test="receiverNickname != null">receiver_nickname = #{receiverNickname},</if>
				<if test="sceneId != null">scene_id = #{sceneId},</if>
				<if test="name != null">name = #{name},</if>
				<if test="content != null">content = #{content},</if>
				<if test="senderId != null">sender_id = #{senderId},</if>
				<if test="senderNickname != null">sender_nickname = #{senderNickname},</if>
				<if test="sendTime != null">send_time = #{sendTime},</if>
		</set>
	</sql>
	
	<sql id="pkwhere">
		<trim prefix="WHERE" prefixOverrides="AND">
			AND id = #{id}
		</trim>
	</sql>
	
	<select id="load"  resultType="MessageDomain">
		SELECT 
		<include refid="columns" />
		FROM t_tm_message
		<include refid="pkwhere" />		
	</select>
	
	<select id="loadDynamic" parameterType="hashmap" resultType="MessageDomain">
		SELECT 		
		<include refid="columns" />
		FROM t_tm_message
		<include refid="where" />
		<if test="_orderby != null">ORDER BY ${_orderby}</if>
		<if test="_offset != null">LIMIT #{_offset},#{_limit}</if>	
	</select>


	<select id="count"  parameterType="hashmap" resultType="integer">
		SELECT count(*) 
		FROM t_tm_message
		<include refid="where" />
	</select>
	
	<insert id="insert"  parameterType="MessageDomain">
		INSERT INTO t_tm_message (			
				id,				
				receiver_id,				
				receiver_nickname,				
				scene_id,				
				name,				
				content,				
				sender_id,				
				sender_nickname,				
				send_time				
		)		
		VALUES (	
			#{id},
			#{receiverId},
			#{receiverNickname},
			#{sceneId},
			#{name},
			#{content},
			#{senderId},
			#{senderNickname},
			#{sendTime}
		) 
	</insert>
	
	<delete id="delete" >
		DELETE FROM t_tm_message
		<include refid="pkwhere" />	
	#end
	</delete>
	
	<delete id="deleteDynamic" parameterType="hashmap">
		DELETE FROM t_tm_message
		<include refid="where" />
	</delete>

	<update id="update" parameterType="MessageDomain">
		UPDATE t_tm_message	
		<include refid="update" />
		<include refid="pkwhere" />	
	</update>
	
	<update id="updateWithoutNull" parameterType="MessageDomain">
		UPDATE t_tm_message
		<include refid="updateWithoutNull"/>
		<include refid="pkwhere" />	
	</update>
	
	<update id="updateDynamic" parameterType="hashmap">
		UPDATE t_tm_message	
		<include refid="update" />
		<include refid="where_old" />
	</update>
	
	
	
</mapper>