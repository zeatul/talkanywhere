<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.taw.user.mapper.UserContactMapper">

	<sql id="columns">
		id as "id" ,
		user_id as "userId" ,
		co_user_id as "coUserId" ,
		remark as "remark" ,
		type as "type" ,
		crdt as "crdt" ,
		updt as "updt" 
	</sql>
	
	<sql id="where">
		<trim prefix="WHERE" prefixOverrides="AND">		 
			<if test="id != null"> AND id = #{id}  </if>
			<if test="userId != null"> AND user_id = #{userId}  </if>
			<if test="coUserId != null"> AND co_user_id = #{coUserId}  </if>
			<if test="remark != null"> AND remark = #{remark}  </if>
			<if test="type != null"> AND type = #{type}  </if>
			<if test="crdt != null"> AND crdt = #{crdt}  </if>
			<if test="updt != null"> AND updt = #{updt}  </if>
		</trim>	
	</sql>
	
	<sql id="where_old">
		<trim prefix="WHERE" prefixOverrides="AND">
			AND id = #{old_id}
			AND user_id = #{old_userId}
			AND co_user_id = #{old_coUserId}
			AND remark = #{old_remark}
			AND type = #{old_type}
			AND crdt = #{old_crdt}
			AND updt = #{old_updt}
		</trim>
	</sql>
	
	<sql id="update">
		<set>
			user_id = #{userId},
			co_user_id = #{coUserId},
			remark = #{remark},
			type = #{type},
			crdt = #{crdt},
			updt = #{updt},
		</set>
	</sql>
	
	<sql id="updateWithoutNull">
		<set>
				<if test="userId != null">user_id = #{userId},</if>
				<if test="coUserId != null">co_user_id = #{coUserId},</if>
				<if test="remark != null">remark = #{remark},</if>
				<if test="type != null">type = #{type},</if>
				<if test="crdt != null">crdt = #{crdt},</if>
				<if test="updt != null">updt = #{updt},</if>
		</set>
	</sql>
	
	<sql id="pkwhere">
		<trim prefix="WHERE" prefixOverrides="AND">
			AND id = #{id}
		</trim>
	</sql>
	
	<select id="load"  resultType="UserContactDomain">
		SELECT 
		<include refid="columns" />
		FROM t_um_user_contact
		<include refid="pkwhere" />		
	</select>
	
	<select id="loadUserContactDynamic" parameterType="hashmap" resultType="UserContactDomain">
		SELECT 		
		<include refid="columns" />
		FROM t_um_user_contact
		<include refid="where" />
		<if test="_orderby != null">ORDER BY ${_orderby}</if>
		<if test="_offset != null">LIMIT #{_offset},#{_limit}</if>	
	</select>


	<select id="count"  parameterType="hashmap" resultType="integer">
		SELECT count(*) 
		FROM t_um_user_contact
		<include refid="where" />
	</select>
	
	<insert id="insert"  parameterType="UserContact">
		INSERT INTO t_um_user_contact (			
				id,				
				user_id,				
				co_user_id,				
				remark,				
				type,				
				crdt,				
				updt				
		)		
		VALUES (	
			#{id},
			#{userId},
			#{coUserId},
			#{remark},
			#{type},
			#{crdt},
			#{updt}
		) 
	</insert>
	
	<delete id="delete" >
		DELETE FROM t_um_user_contact
		<include refid="pkwhere" />	
	#end
	</delete>
	
	<delete id="deleteDynamic" parameterType="hashmap">
		DELETE FROM t_um_user_contact
		<include refid="where" />
	</delete>

	<update id="updateUserContact" parameterType="UserContact">
		UPDATE t_um_user_contact	
		<include refid="update" />
		<include refid="pkwhere" />	
	</update>
	
	<update id="updateUserContactWithoutNull" parameterType="UserContact">
		UPDATE t_um_user_contact
		<include refid="updateWithoutNull"/>
		<include refid="pkwhere" />	
	</update>
	
	<update id="updateUserContactDynamic" parameterType="hashmap">
		UPDATE t_um_user_contact	
		<include refid="update" />
		<include refid="where_old" />
	</update>
	
	
	
</mapper>